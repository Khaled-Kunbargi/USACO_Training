#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <ll> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()

int main() {
    // ios::sync_with_stdio(0); cin.tie(0);
    // freopen("art2.in", "r", stdin);
    // freopen("art2.out", "w", stdout);    
    int n, m; cin >> n >> m;
    char grid[n][m];
    for(int i=0; i<n; ++i){
        for(int j=0; j<m; ++j) cin >> grid[i][j];
    }
    vector <vi> a(n, vi(m));
    for(int i=0; i<n; ++i){
        for(int j=0; j<m; ++j){
            if(grid[i][j] == '*') continue;
            if(i-1 < 0 || grid[i-1][j] == '*'){
                a[i][j] = 1;
                continue;
            }
            a[i][j] = a[i-1][j]+1;
        }
    }
    // for(int i=0; i<n; ++i){
    //     for(int j=0; j<m; ++j) cout << a[i][j] << " ";
    //     cout << '\n';
    // }
    ll ans = 0;
    for(int i=0; i<n; ++i){
        vector <pi> v;
        for(int j=0; j<m; ++j){
            if(grid[i][j] == '*') continue;
            v.pb({j, j});
            while(j<m && grid[i][j] == '.'){
                v.back().s++;
                j++;
            }
        }
        for(auto j: v){
            stack <int> st;
            vi t;
            for(int k=j.f; k<j.s; ++k) t.pb(a[i][k]);
            t.pb(-1);
            st.push(-1);
            for(int i=0; i<=t.size(); ++i){
                while(st.top() != -1 && t[st.top()] >= t[i]){
                    int x=st.top();
                    st.pop();
                    ll new_area = 1LL * (i-1-st.top()) * t[x];
                    ans = max(ans, new_area);
                }
                st.push(i);
            }
        }
    }
    cout << ans;
    return 0;
}
