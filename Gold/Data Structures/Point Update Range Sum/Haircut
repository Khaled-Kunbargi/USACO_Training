#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <ll> vi;
typedef pair <ll,int> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()

const int mod = 1e9+7;
template <class t> struct BIT {
    int size;
    vector <t> bit;
    BIT(int n): size(n), bit(n+1) {}
    void clear() {bit.assign(size+1, 0);}
    void update(int x, int v){
        if(x == 0) return;
        while(x <= size){
            bit[x] += v;
            x += x&-x;
        }
    }
    t sum(int k){
        t res = 0;
        while(k > 0){
            res += bit[k];
            k -= k&-k;
        }
        return res;
    }
};

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("haircut.in", "r", stdin);
    freopen("haircut.out", "w", stdout);    
    int n; cin >> n;
    vi a(n);
    for(ll &i: a) cin >> i;
    BIT <ll> bit(n);
    vi badness(n), ans(n+1);
    for(int i=0; i<n; ++i){
        if(a[i] == 0){ badness[i] = bit.sum(n); continue; }
        bit.update(a[i], 1);
        badness[i] = bit.sum(n)-bit.sum(a[i]);
        //cout << badness[i] << '\n';
    }
    bit.clear();
    for(int i=n-1; i>=0; --i){
        ans[a[i]+1] += badness[i];
    }
    ll sum=0;
    for(int i=0; i<n; ++i){
        sum += ans[i];
        cout << sum << "\n";
    }
    return 0;   
}
