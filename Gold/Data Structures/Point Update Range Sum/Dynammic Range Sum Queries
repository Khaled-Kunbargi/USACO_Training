#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()

const int N = 200;

template <class t> struct segtree {
    int size = 1;
    vector <t> values;
    void init(int n){
        while(size < n) size *= 2;
        values.assign(2*size, 0);
    }
    void modify(int i, int v, int x, int lx, int rx){
        if(rx - lx == 1){ 
            values[x] = v; 
            return;
        }
        int m = (lx+rx)/2;
        if(i < m)
            modify(i, v, 2*x+1, lx, m);
        else
            modify(i, v, 2*x+2, m, rx);
        values[x] = values[2*x+1] +  values[2*x+2];
    }
    void modify(int i, int v){
        modify(i, v, 0, 0, size);
    }
    t calc(int l, int r, int x, int lx, int rx){
        if(rx <= l || r <= lx) return 0;
        if(l <= lx && rx <= r){
            return values[x];
        }
        int m = (lx+rx)/2;
        t res = 0;
        res += calc(l, r, 2*x+1, lx, m);
        res += calc(l, r, 2*x+2, m, rx);
        return res;
    }
    t calc(int l, int r){
        return calc(l, r, 0, 0, size);
    }
};

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    // freopen("paintbarn.in", "r", stdin);
    // freopen("paintbarn.out", "w", stdout);    
    int n, q; cin >> n >> q;
    segtree <ll> st;
    st.init(n);
    for(int i=0; i<n; ++i){
        int x; cin >> x;
        st.modify(i, x);
    }
    while(q--){
        int tp,a, b; cin >> tp >> a >> b;
        if(tp == 1){
            st.modify(--a, b);
        }else{
            cout << st.calc(--a, b) << "\n";
        }
    }
    return 0;
}
/* Also solution with BIT
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()

const int N = 200000;
int n;
ll t[N+1];
int lsb(int x){ return x & -x;}
ll sum(int k){
    ll x = 0;
    while(k > 0){
        x += t[k];
        k -= lsb(k);
    }
    return x;
}
void add(int k, int v){
    while(k <= n){
        t[k] += v;
        k += lsb(k);
    }
}
int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    // freopen("paintbarn.in", "r", stdin);
    // freopen("paintbarn.out", "w", stdout);    
    int q; cin >> n >> q;
    vi arr(n+1);
    for(int i=0; i<n; ++i){
        int x; cin >> x;
        add(i+1, x);
        arr[i+1] = x;
    }
    while(q--){
        int tp, a, b;
        cin >> tp >> a >> b;
        if(tp == 1) add(a, b - (sum(a)-sum(a-1)));
        else cout << sum(b)  - sum(a-1) << "\n";
    }   

    return 0;
}
*/
