#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()

const int N = 200;

struct segtree {
    int size = 1;
    vector <int> values;
    void init(int n){
        while(size < n) size *= 2;
        values.assign(2*size, OO);
    }
    void modify(int i, int v, int x, int lx, int rx){
        if(rx - lx == 1){ 
            values[x] = v; 
            return;
        }
        int m = (lx+rx)/2;
        if(i < m)
            modify(i, v, 2*x+1, lx, m);
        else
            modify(i, v, 2*x+2, m, rx);
        values[x] = min(values[2*x+1], values[2*x+2]);
    }
    void modify(int i, int v){
        modify(i, v, 0, 0, size);
    }
    int calc(int l, int r, int x, int lx, int rx){
        if(rx <= l || r <= lx) return OO;
        if(l <= lx && rx <= r){
            return values[x];
        }
        int m = (lx+rx)/2;
        int res = OO;
        res = min(res, calc(l, r, 2*x+1, lx, m));
        res = min(res, calc(l, r, 2*x+2, m, rx));
        return res;
    }
    int calc(int l, int r){
        return calc(l, r, 0, 0, size);
    }
} st;

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    // freopen("paintbarn.in", "r", stdin);
    // freopen("paintbarn.out", "w", stdout);    
    int n, q; cin >> n >> q;
    st.init(n);
    for(int i=0; i<n; ++i){
        int x; cin >> x;
        st.modify(i, x);
    }
    while(q--){
        int tp; cin >> tp;
        if(tp == 1){
            int i, v; cin >> i >> v;
            st.modify(--i, v);
        }else{
            int l, r; cin >> l >> r;
            cout << st.calc(--l, r) << "\n";
        }
    }
    return 0;
}
