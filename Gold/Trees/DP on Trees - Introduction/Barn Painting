#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <ll> vi;
typedef pair <int,int> pi;
#define pb push_back
#define f first
#define s second
#define OO INT_MAX
#define all(x) (x).begin(), (x).end()

const int N = 200009, m = 1e9+7;
vi adj[N];
ll dp[N][4];
void dfs(int node, int pa){
    for(int i: adj[node]){
        if(i != pa){
            dfs(i, node);
            dp[node][1] *= (dp[i][2] + dp[i][3]); dp[node][1] %= m;
            dp[node][2] *= (dp[i][1] + dp[i][3]); dp[node][2] %= m;
            dp[node][3] *= (dp[i][1] + dp[i][2]); dp[node][3] %= m;
        }
    }
}
int main() {
    // ios::sync_with_stdio(0); cin.tie(0);
    freopen("barnpainting.in", "r", stdin);
    freopen("barnpainting.out", "w", stdout);    
    int n, k; cin >> n >> k;
    for(int i=0; i<n-1; ++i){
        int a, b; cin >> a >> b;
        adj[a].pb(b); adj[b].pb(a);
    }
    for(int i=0; i<k; ++i){
        int a, c; cin >> a >> c;
        dp[a][c] = 1;
    }
    for(int i=1; i<=n; ++i){
        if(dp[i][1] || dp[i][2] || dp[i][3]) continue;
        dp[i][1] = dp[i][2] = dp[i][3] = 1;
    }
    dfs(1, 0);
    cout << (dp[1][1] + dp[1][2] + dp[1][3])%m << "\n";
    return 0;       
}
