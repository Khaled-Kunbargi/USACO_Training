#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <ll> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()
 
const int maxn=100000;
vi adj[maxn];
bool vis[maxn], on_stack[maxn];
deque <int> cycle;
 
bool dfs(int n){
    vis[n] = on_stack[n] = 1;
    for(int u: adj[n]){
        if(on_stack[u]){
            cycle.pb(n);
            on_stack[n] = on_stack[u] = 0;
            return 1;
        }else if(!vis[u]){
            if(dfs(u)){
                if(on_stack[n]){
                    on_stack[n] = 0;
                    cycle.pb(n);
                    return 1;
                }else{
                    cycle.pb(n);
                    return 0;
                }
            }
            if(!cycle.empty()) return 0;
        }
    }
    on_stack[n] = 0;
    return 0;
}
 
int main() {
    // ios::sync_with_stdio(0); cin.tie(0);
    // freopen("dining.in", "r", stdin);
    // freopen("dining.out", "w", stdout);    
    int n, m; cin >> n >> m;
    for(int i=0; i<m; ++i){
        int a, b; cin >> a >> b;
        adj[--a].pb(--b);
    }
    for(int i=0; cycle.empty() && i < n; i++) if(!vis[i]){ dfs(i);}
    if(cycle.empty()){cout << "IMPOSSIBLE\n"; return 0;}
    reverse(all(cycle));
    cout << cycle.size()+1 << "\n";
    for(auto i: cycle) cout << i+1 << ' ';
    cout << cycle[0]+1;
    return 0;
}
