#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <ll> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()

struct edge {
    pi a, b;
    int w;
};

struct DSU {
    vi p, r, sz;
    int n, mx;
    void init(int n){ this->n = n; 
        p.resize(n); r.resize(n); sz.assign(n, 1);
        mx = 0;
        for(int i=0; i<n; i++) p[i] = i;
    }

    int get(int a){ return p[a] = (p[a] == a ? a: get(p[a])); }

    bool same_set(int a, int b){return get(a) == get(b);}

    void unite(int a, int b){
        a = get(a), b = get(b);
        if(a == b) return;
        if(r[a] == r[b])
            r[a]++;
        if(r[b] > r[a]) swap(a, b);
        p[b] = a;           
        sz[a] += sz[b];
        mx = max((ll)mx, sz[a]);
    }
} dsu;

int dx[]{1, -1, 0, 0};
int dy[]{0, 0, 1, -1};

bool cmp(const edge &a, const edge &b){
    return a.w < b.w;
}

int n;
bool in_range(int x, int y){
    return x >= 0 && y >= 0 && x < n && y < n;
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("tractor.in", "r", stdin);
    freopen("tractor.out", "w", stdout);

    cin >> n;
    int a[n][n];
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++) cin >> a[i][j];
    }
    vector <edge> v;
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            for(int k=0; k<4; k++){
                int x = i + dx[k], y = j + dy[k];
                if(in_range(x, y)){
                    v.pb({{i, j}, {x, y}, abs(a[i][j] - a[x][y])});
                }
            }
        }
    }
    sort(all(v), cmp);
    int half = n * n / 2 + ((n * n / 2) % 2);
    dsu.init(n * n);
    //cout << "h\n";
    for(int i=0; i<v.size(); i++){
        pi a = v[i].a, b = v[i].b;
        int x = a.f, y = a.s, xx = b.f, yy = b.s;
        dsu.unite(x + y*n,  xx + yy*n);
        if(dsu.mx >= half){
            cout << v[i].w << "\n";
            break;
        }
    }
    return 0;
}
