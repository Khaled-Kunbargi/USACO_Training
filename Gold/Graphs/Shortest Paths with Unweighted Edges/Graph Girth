#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 
typedef vector <int> vi;
typedef pair <int,int> pi;
#define pb push_back
//#define f first
//#define s second
#define OO INT_MAX

int ans = OO;
vi dist, pre;

void bfs(int start, vector <vi> &adj){
    queue <int> q;
    q.push(start);
    dist[start] = 0;
    pre[start] = -1;
    while(!q.empty()){
        int cur = q.front(); q.pop();
        for(int x: adj[cur]){
            if(x == pre[cur]) continue; //parent
            if(dist[x] != -1){
                ans = min(ans, dist[cur] + dist[x] + 1);
            }else{
                q.push(x);
                dist[x] = dist[cur] + 1;
                pre[x] = cur;
            }
        }
    }
}

int main() {
    //ios::sync_with_stdio(0); cin.tie(0);
    //freopen("pails.in", "r", stdin);
    //freopen("pails.out", "w", stdout);

    int n, m; cin >> n >> m;
    vector <vi> adj(n);
    for(int i=0; i<m; i++){
        int a,b; cin >> a >> b;
        adj[--a].pb(--b);
        adj[b].pb(a);
    }
    for(int i=0; i<n; i++){
        dist.assign(n, -1);
        pre.assign(n, -1);
        bfs(i, adj);
    }
    cout << (ans == OO ? -1 : ans);

    return 0;
}
