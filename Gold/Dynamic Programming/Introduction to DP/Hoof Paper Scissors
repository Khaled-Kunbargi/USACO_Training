#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

const int MOD = 1e9+7, mx = 1e5;

int dp[mx][22][3];
//h==0, p==1, s==2.
int a[mx+1];

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("hps.in", "r", stdin);
    //freopen("hps.out", "w", stdout);

    int N, K; cin >> N >> K;
    for(int i=0; i<N; i++){
        char c; cin >> c;
        if(c == 'H') a[i] = 0;
        if(c == 'P') a[i] = 1;
        if(c == 'S') a[i] = 2;
    }

    for(int i=0; i<N; i++){
        for(int j=0; j<=K; j++){
            for(int k=0; k<3; k++){
                if(k == a[i]) dp[i][j][k]++;
                dp[i+1][j+1][0] = max(dp[i+1][j+1][0], dp[i][j][k]);
                dp[i+1][j+1][1] = max(dp[i+1][j+1][1], dp[i][j][k]);
                dp[i+1][j+1][2] = max(dp[i+1][j+1][2], dp[i][j][k]);
                dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j][k]);
            }
        }
    }

    int best =0 ;
    for(int i=0; i<3; i++) best = max(best, dp[N-1][K][i]);
    cout << best;
    return 0;
} 
