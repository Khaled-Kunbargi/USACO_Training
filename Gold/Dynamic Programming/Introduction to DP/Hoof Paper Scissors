#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

const int MOD = 1e9+7, mx = 1e5;

int dp[mx][22][3];
//h==0, p==1, s==2.
int a[mx+1];

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("hps.in", "r", stdin);
    //freopen("hps.out", "w", stdout);

    int N, K; cin >> N >> K;
    for(int i=0; i<N; i++){
        char c; cin >> c;
        if(c == 'H') a[i] = 0;
        if(c == 'P') a[i] = 1;
        if(c == 'S') a[i] = 2;
    }

    for(int i=0; i<N; i++){
        for(int j=0; j<=K; j++){
            for(int k=0; k<3; k++){
                if(k == a[i]) dp[i][j][k]++;
                dp[i+1][j+1][0] = max(dp[i+1][j+1][0], dp[i][j][k]);
                dp[i+1][j+1][1] = max(dp[i+1][j+1][1], dp[i][j][k]);
                dp[i+1][j+1][2] = max(dp[i+1][j+1][2], dp[i][j][k]);
                dp[i+1][j][k] = max(dp[i+1][j][k], dp[i][j][k]);
            }
        }
    }

    int best =0 ;
    for(int i=0; i<3; i++) best = max(best, dp[N-1][K][i]);
    cout << best;
    return 0;
} 
/* My own solution:
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <int,int> pi;
#define pb push_back
#define f first
#define s second
#define OO INT_MAX
#define all(x) (x).begin(), (x).end()
#define no cout << "NO\n"
#define yes cout << "YES\n"

const int m = 1e9+7, N = 1e5+10;
int memo[N][22][3], a[N];
int n, k; 
int point(int a, int b){
    if(a == 0 && b == 1) return 1;
    if(a == 1 && b == 2) return 1;
    if(a == 2 && b == 0) return 1;
    return 0;
}
int dp(int i, int j, int tp){
    if(j > k) return -OO;
    if(i >= n){ 
        if(j <= k) return 0;
        else return -OO;
    }
    int &ret = memo[i][j][tp];
    if(ret != 0) return ret;
    ret = max(ret, point(a[i], tp)+dp(i+1, j, tp));
    for(int t=0; t<3; ++t){
        if(t == tp) continue;
        ret = max(ret, point(a[i], tp)+dp(i+1, j+1, t));
    }
    return ret;
}
void init(){
    for(int i=0; i<n; ++i){
        for(int j=0; j<k; ++j)
            for(int jj=0; jj<3; ++jj) memo[i][j][jj] = 0;
    }
}
int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("hps.in", "r", stdin);
    freopen("hps.out", "w", stdout);    
    cin >> n >> k;
    for(int i=0; i<n; ++i){
        char c; cin >> c;
        if(c == 'H') a[i] = 0;
        if(c == 'P') a[i] = 1;
        if(c == 'S') a[i] = 2;
    }
    int ans=0;
    ans = max(ans, dp(0,0,0));
    init();
    ans = max(ans, dp(0,0,1));
    init();
    ans = max(ans, dp(0,0,2));
    cout << ans;
    return 0;       
}   
*/
