#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <ll> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO INT64_MAX
#define all(x) (x).begin(), (x).end()

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("cbarn2.in", "r", stdin);
    freopen("cbarn2.out", "w", stdout);    
    int n, k; cin >> n >> k;
    deque <int> r(n);
    for(int i=0; i<n; ++i) cin >> r[i];

    ll ans = OO;
    for(int st=0; st<n; ++st){
        vector <vi> dp(k+1, vi(n+1, OO));
        dp[0][n] = 0;
        for(int used_door=1; used_door <=k; ++used_door){
            for(int i=0; i<n; ++i){
                ll partial_dist = 0;
                for(int j=i+1; j <= n; ++j){
                    partial_dist += r[j-1] * (j - i - 1);
                    ll new_dist = dp[used_door-1][j];
                    if(new_dist < OO) new_dist += partial_dist;
                    dp[used_door][i] = min(dp[used_door][i], new_dist);
                }
            }
        }
        ans = min(ans, dp[k][0]);
        int x = r.front();
        r.pop_front();
        r.pb(x);
    }
    cout << ans;
    return 0;
}

/* My Complete Search solution:
#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 
typedef vector <int> vi;

int mn = 1e9;
void f(const vector <int> &howlong, deque <int> &a){
    vector <int> pre(howlong.size()+1);
    for(int i=1; i<=howlong.size(); i++){
        pre[i] = pre[i-1] + howlong[i-1];
    }
    int total_dist = 0;
    while(pre.size() > 1){
        for(int i= *pre.begin(), first =i; i < *next(pre.begin()); i++){
            total_dist += (i-first) * a[i];
        }
        pre.erase(pre.begin());
    }
    mn = min(mn, total_dist);
}

vector <vector <int>> ans;
void generateVectors(int N, int k, std::vector<int>& current, int index) {
    if (N == 0 && k == 0) {
        ans.push_back(current);
        return;
    }

    if (N < 0 || k <= 0) {
        return;
    }

    for (int i = 1; i <= N; ++i) {
        current[index] = i;
        generateVectors(N - i, k - 1, current, index + 1);
    }
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("cbarn2.in", "r", stdin);
    freopen("cbarn2.out", "w", stdout);

    int n, k; cin >> n >> k;
    deque <int> r(n);
    for(int i=0; i<n; i++) cin >> r[i];


    for(int i=0; i<n; i++){
        if(i){
            int first = r.front();
            r.pop_front();
            r.push_back(first);
        }
        vi t(k);
        generateVectors(n, k, t, 0);
        for(auto i: ans){
            f(i, r);
        }
        ans.clear();
    }  
    cout << mn;
    return 0;
}  
*/
