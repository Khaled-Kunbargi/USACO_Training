#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("snakes.in", "r", stdin);
    freopen("snakes.out", "w", stdout);

    int n, k; cin >> n >> k;
    vector <int> a(n+1);
    for(int i=1; i<=n; i++) cin >> a[i];

    vector <vector<int>> dp(n+1, vector<int> (k+1));
    //dp[i][j] : min sum of net sizes for the first i snake groups
    //with exactly j resizings.

    int mx = -1, sum=0;
    for(int i=1; i<=n; i++){
        mx = max(mx, a[i]);
        dp[i][0] = i * mx;
        for(int j=1; j<=k; j++){
            dp[i][j] = INT_MAX;
            int net_size = a[i];
            for(int c=i-1; c >= 0; c--){
                dp[i][j] = min(dp[i][j], dp[c][j-1] + net_size * (i-c));
                net_size = max(net_size, a[c]);
            }
        }
        sum += a[i];
    }
    cout << dp[n][k] - sum;
    return 0;
}  
