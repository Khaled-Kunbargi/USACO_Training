//Now this is my solution:
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <ll> vi;
typedef pair <ll,ll> pi;
#define pb push_back
#define f first
#define s second
#define OO 1e9
#define all(x) (x).begin(), (x).end()

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("snakes.in", "r", stdin);
    freopen("snakes.out", "w", stdout);    
    int n, k; cin >> n >> k;
    vi a(n+1);
    for(int i=1; i<=n; ++i) cin >> a[i];

    vector<vi> dp(n+1, vi(k+1));
    int mx=0, sum=0;
    for(int i=1; i<=n; ++i){
        mx = max((ll)mx, a[i]);
        dp[i][0] = mx * i;
    }
    for(int i=1; i<=n; ++i){
        sum += a[i];
        for(int resize=1; resize<=k; ++resize){
            int mx = a[i];
            dp[i][resize] = OO;
            for(int j=i-1; j >= 0; --j){
                dp[i][resize] = min(dp[i][resize], dp[j][resize-1] + mx * (i-j));
                mx = max((ll)mx, a[j]);
            }
        }
    }
    cout << dp[n][k] - sum;
    return 0;
}
/*
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <int,int> pi;
#define pb push_back
#define f first
#define s second
#define OO INT_MAX
#define all(x) (x).begin(), (x).end()
#define no cout << "NO\n"
#define yes cout << "YES\n"
 
const int N = 410;
ll a[N], memo[N][N];
int n,k; 
ll dp(int i, int j){
    if(i>=n) return 0;
    if(j > k) return OO;
    ll &ret = memo[i][j];
    if(ret != OO) return ret;
    ll mx=-1;
    for(int ind=i; ind<n; ++ind){
        mx = max(mx, a[ind]);
        ret = min(ret, mx*(ind-i+1)+dp(ind+1, j+1));
    }
    return ret;
}
int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("snakes.in", "r", stdin);
    freopen("snakes.out", "w", stdout);
    for(int i=0; i<N; ++i){
        for(int j=0; j<N; ++j) memo[i][j] = OO;
    }
    cin >> n >> k;
    ll sum=0;
    for(int i=0; i<n; ++i){ cin >> a[i]; sum += a[i]; }
    cout << dp(0, 0)-sum;
    return 0;       
}   
*/
