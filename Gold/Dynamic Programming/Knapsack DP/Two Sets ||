#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

const int MOD = 1e9+7;

ll exp(ll b, ll p){
    ll m = MOD;
    b %= m;
    ll res = 1;
    while(p > 0){
        if(p & 1) res = res * b %  m;
        b =  b*b % m;
        p /= 2;      
    }
    return res%m;
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("socdist.in", "r", stdin);
    //freopen("socdist.out", "w", stdout);

    int n; cin >> n;
    int y = n*(n+1)/2;
    if(y & 1){
        cout << 0; return 0;
    }
    y /= 2;
    vector <vector <int>> dp(n+1, vector<int>(y+1));

    dp[0][0] = 1;
    for(int k=1; k<=n; k++){
        for(int x=0; x <= y; x++){
            dp[k][x] = dp[k-1][x] % MOD;
            if(x - k >= 0) dp[k][x] = (dp[k][x] + dp[k-1][x-k]) % MOD;
        }
    }
    cout << dp[n][y] * exp(2, MOD-2) % MOD;

    return 0;
} 
