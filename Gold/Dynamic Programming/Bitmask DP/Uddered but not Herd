#include <bits/stdc++.h>
using namespace std;
#define int long long
#define pi pair<int,int>
#define vi vector<int>
#define rep(i,x,n) for(int i=x; i<n; ++i)
#define For(i,n) rep(i,0,n)
#define endl "\n"
#define sp ' '
#define pb push_back
#define f first
// #define s second
#define sz size()
#define all(x) (x).begin(),(x).end()
 
const int N = 2e5+10, OO = 1e18, mod = 1e9+7, mx = 8;
void tr(int a, int b){cout << a << sp << b << endl;}
void cmx(int &a, int b){a = max(a,b);}
void cmn(int &a, int b){a = min(a,b);}

int dp[1<<mx], v[mx][mx], mp[mx], a[N];
string al;
/*
mildredree

deilmr
012345

dp[m] = 1.
dp[e] = 3.
dp[m,e] = 3.
dp[d] = 2.
dp[m,d] = 2.
dp[m,d,e] = 3.
*/
int32_t main() {
    ios::sync_with_stdio(0); cin.tie(0);
    // freopen("talent.in", "r", stdin);
    // freopen("talent.out", "w", stdout);
    string b; cin >> b;
    al = b;
    sort(all(al)); al.erase(unique(all(al)), end(al));
    int n = b.sz;
    For(i,n){
        For(j,al.sz) if(b[i]==al[j]) a[i] = j;
        mp[a[i]]++;
    }
    For(i,mx){ For(j,mx) if(j != i){
        bool fl=0; 
        // a, e 
        For(k,n){
            if(a[k]==j && !fl) v[i][j]++;
            if(a[k]==i) fl = 1;
            if(a[k]==j) fl = 0;
        }
    }}
    // cout << v[4][1] << endl;
    For(i,al.sz){
        dp[(1<<i)] = mp[i];
    }
    for(int msk=3; msk < 1<<mx; ++msk){
        if(__builtin_popcount(msk)==1) continue;
        dp[msk] = OO;
        For(i,mx) if((1<<i) & msk){
            int c = 0;
            For(j,mx) if(((1<<j)&msk) && j != i){
                c += v[i][j];
            }
            cmn(dp[msk], dp[msk^(1<<i)] + c);
        } 
    }  
    int all = 0;
    For(i,mx) if(mp[i]) all += (1<<i);
    cout << dp[all] << endl;
    return 0;
}
/*
Just some notices : 
I believe you can do it !
You've done things that were harder ... 
Stay calm and focused  =)
*/
