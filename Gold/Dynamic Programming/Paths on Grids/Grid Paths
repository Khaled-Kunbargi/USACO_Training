#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

const int MOD = 1e9+7, maxn=1000;
bool trap[maxn][maxn];

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("hps.in", "r", stdin);
    //freopen("hps.out", "w", stdout);

    int n; cin >> n;
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            char c; cin >> c;
            if(c == '*') trap[i][j] = 1;
        }
    }
    vector <vector <int>> dp(n, vector<int>(n));
    dp[0][0] =  !trap[0][0] ? 1: 0;
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            if(trap[i][j]) continue;
            if(i-1 >= 0)
                dp[i][j] = (dp[i][j] + dp[i-1][j])%MOD;
            if(j-1 >= 0)
                dp[i][j] = (dp[i][j] + dp[i][j-1])%MOD;
        }
    }
    cout << dp[n-1][n-1];

    return 0;
} 
