#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 


int reserved[8][8], vis[8][8];
int ans=0;
void backtrack(int row){
    if(row == 8){
        ans++;
        return;
    }
    for(int i=0; i<8; i++){
        if(reserved[row][i]) continue;
        bool on_col = 0;
        for(int r=0; r<row; r++){ 
            if(vis[r][i]){on_col = 1; break;}
        }
        if(on_col) continue;
        bool on_d1 = 0, on_d2 = 0;
        for(int r=row-1, c=i-1; r >= 0 && c >= 0; r--, c--){
            if(vis[r][c]){on_d1 =1; break;}
        }
        for(int r=row-1, c=i+1; r >= 0 && c < 8; r--, c++){
            if(vis[r][c]){on_d2 =1; break;}
        }
        if(on_d1 || on_d2 ) continue;
        vis[row][i] = 1;
        backtrack(row+1);
        vis[row][i] = 0;
    }
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("socdist.in", "r", stdin);
    //freopen("socdist.out", "w", stdout);

    for(int i=0; i<8; i++){
        for(int j=0; j<8; j++){
            char c; cin >> c;
            if(c == '*') reserved[i][j] = 1;
        }
    }
    backtrack(0);
    cout << ans;
    return 0;
} 
