#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <int,int> pi;
#define pb push_back
#define f first
#define s second
#define OO INT_MAX
#define all(x) (x).begin(), (x).end()
#define no cout << "NO\n"
#define yes cout << "YES\n"
 
const int m = 1e9+7,N =2010, mx=2e6+1;
void solve(){
    int n; cin >> n;
    vector <pi> v(n);
    map <int, vi> mp;
    vi L;
    for(int i=0; i<n; ++i){
        cin >> v[i].f >> v[i].s;
        L.pb(v[i].f);
        mp[v[i].f].pb(i);
    }
    sort(all(L));
    L.erase(unique(all(L)), L.end());
    priority_queue <int> pq;
    for(int i=0; i<L.size(); ++i){
        int cur = L[i];
        for(int j: mp[cur]) pq.push(-v[j].s);
        while(!pq.empty()){
            int mn = -pq.top(); pq.pop();
            if(mn < cur){no; return;}
            cur++;
            if(mp[cur].size()) break;
        }
    }
    yes;
}
int main() {    
    ios::sync_with_stdio(0); cin.tie(0);
    // freopen("help.in", "r", stdin);
    // freopen("help.out", "w", stdout);    
    int t; cin >> t;
    while(t--) solve();
    return 0;      
}
/* stuff you should look for
  * visualize !
	* int overflow, array bounds
	* special cases (n=1?), slow multiset operations
	* do smth instead of nothing and stay organized
*/
