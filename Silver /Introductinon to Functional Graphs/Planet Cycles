#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

vector <vector<int>> radj;
vector <int> ans, succ, inCycle, vis;

void rdfs(int x){
    if(vis[x]) return; 
    vis[x] = 1;
    for(auto i: radj[x]){
        if(!inCycle[i]){
            ans[i] = ans[x] + 1;
        }
        rdfs(i);
    }
}

void floyd(int x){
    int a,b;
    a = b=x;
    do{
        a = succ[a];
        b = succ[succ[b]];
    }while(a != b);

    int length = 1;
    a = succ[a];
    while(a != b){
        a = succ[a];
        length++;
    }

    ans[a] = length;
    inCycle[a] = 1;
    a = succ[a];
    while(a != b){
        ans[a] = length;
        inCycle[a] = 1;
        a = succ[a];
    }

    rdfs(a);
}

int main(){
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("shuffle.in", "r", stdin);
    //freopen("shuffle.out", "w", stdout);
    
    int n; cin >> n;
    succ.resize(n); inCycle.resize(n); vis.resize(n); radj.resize(n);
    for(int i=0; i<n; i++){
        cin >> succ[i];
        radj[--succ[i]].push_back(i);
    }

    ans.assign(n, -1);
    for(int i=0; i<n; i++){
        if(ans[i] == -1) floyd(i);
    }
    for(auto i: ans) cout << i << ' ';
    return 0;   
} 
