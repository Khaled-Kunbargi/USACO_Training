#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <int,int> pi;
#define pb push_back
#define f first
#define s second
#define OO INT_MAX
#define all(x) (x).begin(), (x).end()
#define no cout << "NO\n"
#define yes cout << "YES\n"

const int m =  1e9+7, N = 100001, maxc=1e4+1;
ll heights[N], widths[N];
pi v[N];
vector <pi> x[2*maxc], y[2*maxc];

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("triangles.in", "r", stdin);
    freopen("triangles.out", "w", stdout);        
    int n; cin >> n; 
    for(int i=0; i<n; ++i){
        cin >> v[i].f >> v[i].s;
        x[v[i].f + maxc].pb({v[i].s, i}); 
        y[v[i].s + maxc].pb({v[i].f, i});
    }
    for(int i=0; i<2*maxc; ++i) if(x[i].size() > 0){
        int sz = x[i].size();
        sort(all(x[i]));
        ll cur=0;
        for(int j=1; j<sz; ++j){ cur += x[i][j].f - x[i][0].f; }
        for(int j=0; j<sz; ++j){
            if(j) cur += (2*j - sz) * (x[i][j].f - x[i][j-1].f);
            heights[x[i][j].s] = cur;
        }
    }
    for(int i=0; i<2*maxc; ++i) if(y[i].size() > 0){
        int sz = y[i].size();
        sort(all(y[i]));
        ll cur=0;
        for(int j=1; j<sz; ++j){ cur += y[i][j].f - y[i][0].f; }
        for(int j=0; j<sz; ++j){
            if(j) cur += (2*j - sz) * (y[i][j].f - y[i][j-1].f);
            widths[y[i][j].s] = cur;
        }
    }
    ll ans=0;
    for(int i=0; i<n; ++i){
        ans += heights[i] * widths[i] % m; ans %= m; 
    }
    cout << ans;
    return 0;       
}   
