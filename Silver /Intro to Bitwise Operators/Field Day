#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

ll solve(ll x, ll y){
    if(x == y) return 0;
    else if(x > y){
        ll is_odd = x%2;
        return 1 + is_odd + solve((x+is_odd)/2, y);
    }else{
        ll is_odd = y%2;
        return min(y - x, 1 + is_odd + solve(x, y/2));
    }
}

int main(){
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("shuffle.in", "r", stdin);
    //freopen("shuffle.out", "w", stdout);
    
    int c, n; cin >> c >> n;
    vector <int> teams(n);
    vector <int> dist(1 << c, -1);
    queue <int> q;

    for(int i=0; i<n; i++){
        string s; cin >> s; 
        for(int j=0; j<c; j++){
            if(s[j] == 'G') teams[i] += 1 << j;
        }
        dist[teams[i]] = 0;
        q.push(teams[i]);
    }
    
    while(!q.empty()){
        int mask = q.front(); q.pop();
        for(int i=0; i<c; i++){
            int new_mask = mask ^ (1 << i);
            if(dist[new_mask] == -1){
                dist[new_mask] = dist[mask] + 1;
                q.push(new_mask);
            }
        }
    }

    for(int i=0; i<n; i++){
        cout << c - dist[((1 << c) - 1) ^ teams[i]] << "\n";
    }
    return 0;   
} 
