#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

vector <vector<int>> adj;
vector <int> subtree_sz;

void dfs(int node, int pa){
    subtree_sz[node] = 0;
    for(auto i: adj[node]){
        if(i == pa) continue;
        dfs(i, node);
        subtree_sz[node] += 1 + subtree_sz[i];
    }
}

int main(){
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("countcross.in", "r", stdin);
    //freopen("countcross.out", "w", stdout);
    
    
    int n; cin >> n;
    subtree_sz.resize(n);
    adj.resize(n);
    for(int i=1; i<n; i++){
        int x; cin >> x;
        adj[--x].push_back(i);
        adj[i].push_back(x);
    }
    dfs(0, -1);
    for(int i=0; i<n; i++) cout << subtree_sz[i] << " ";

    return 0;   
} 
