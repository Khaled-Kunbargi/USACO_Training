#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector <int> vi;
typedef pair <int,int> pi;
#define pb push_back
#define f first
#define s second
#define OO INT_MAX
#define all(x) (x).begin(), (x).end()

/*
Didn't got the idea though it was somewhat easy.
*/

const int N = 2505;
vi adj[N];
bool vis[N];
int sum[2], a[N], cnt[2];
void dfs(int node, bool id){
    if(vis[node]) return;
    vis[node]=1;
    sum[id] += a[node];
    cnt[id]++;
    for(int &i: adj[node]) dfs(i, 1-id);
}
int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    freopen("clocktree.in", "r", stdin);
    freopen("clocktree.out", "w", stdout);    
    int n; cin >> n;
    for(int i=0; i<n; ++i) cin >> a[i];
    for(int i=0; i<n-1; ++i){
        int a, b; cin >> a >> b;
        adj[--a].pb(--b);
        adj[b].pb(a);
    }
    dfs(0, 1);
    //cout << sum[1] << " " << sum[0] << "\n";
    if(sum[1]%12 == sum[0]%12){
        cout << n; return 0;
    }else if((sum[1]+1)%12 == sum[0]%12){
        cout << cnt[0];
    }else if((sum[0]+1)%12 == sum[1]%12){
        cout << cnt[1];
    }else cout << 0;
    return 0;   
}
