#include <bits/stdc++.h>
using namespace std;
  
map <int,vector<int>> adj;
map <int,int> vis, id;
bool bipartite = true;

void DFS(int node){
    vis[node] = 1;
    for(auto i: adj[node]){
        if(!vis[i]){ 
            id[i] = 1 - id[node];
            DFS(i);
        }
        if(id[node] == id[i]) bipartite = false;
    }
}

int main(){
    ios::sync_with_stdio(0); cin.tie(0);
    int n, m; cin >> n >> m;
    for(int i=0; i<m; i++){
        int a, b; cin >> a >> b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    for(int i=1; i<=n; i++){
        if(!vis[i]){ id[i] = 0; DFS(i);}
    }
    if(bipartite){
        for(int i=1; i<=n; i++) cout << id[i]+1 << " ";
    }else cout << "IMPOSSIBLE";
    return 0;
}
