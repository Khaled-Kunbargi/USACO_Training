#include <bits/stdc++.h>
using namespace std;
typedef long long ll; 

map <int,vector<int>> adj;
map <int,int> vis;

int reachable(int i){
    int reached = 1;
    vis[i] = 1;
    for(auto j: adj[i]){
        if(j != i && !vis[j]){
            vis[j] = 1;
            reached += reachable(j);
        }
        
    }
    return reached;
}

struct item {
    ll x, y, r;
};

int main(){
    ios::sync_with_stdio(0); cin.tie(0);
    //freopen("fenceplan.in", "r", stdin);
    //freopen("fenceplan.out", "w", stdout);

    int n; cin >> n;
    vector <item> a(n);
    for(int i=0; i<n; i++){
        cin >> a[i].x >> a[i].y >> a[i].r;
    }
    for(int i=0; i<n; i++){
        for(int j=0; j<n; j++){
            if(pow(a[i].y - a[j].y, 2) + pow(a[i].x - a[j].x,2) <= a[i].r * a[i].r)
                adj[i].push_back(j);
        }
    }
    int mx = 0;
    for(int i=0; i<n; i++){
        vis.clear();
        mx = max(mx, reachable(i));
    }
    cout << mx;
    return 0;
}
